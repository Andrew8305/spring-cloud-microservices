input {
  gelf {
    type => docker
    port => 12201
  }
}

filter {
  multiline {
      pattern => "^%{TIMESTAMP_ISO8601}"
      negate => true
      what => "previous"
      source => "short_message"
  }
  grok {
    patterns_dir => "/conf/patterns"
    match => { "short_message" => "^%{TIMESTAMP_ISO8601:created_log}\s+%{LOGLEVEL:log_level}\s+%{NUMBER:pid}\s+---\s+\[\s*%{THREADNAME:thread}\s*\]\s+%{DATA:class}\s*:\s*%{DATA:log_message}(?:\n%{GREEDYDATA:stack})?\n*$" }
  }
  mutate {
    replace => { "message" => "%{log_message}" }
    replace => { "level" => "%{log_level}"}
    replace => { "created" => "%{created_log}"}
    remove_field => [ "log_level", "log_message", "command", "image_id", "container_id", "pid" ]
  }
}

output {
  elasticsearch {
    hosts => [db]
  }
  # stdout { codec => rubydebug } # Uncomment to DEBUG
}
